##################################################################################
# Get translations from crowdin
# Sync back to content repo
#         
#
##################################################################################

name: Download central translations and create a PR
on:
  workflow_call:
    inputs:
      pr-title:
        description: Title for PR
        type: string
        default: Translation sync from actions
      pr-body:
        description: Description for PR
        type: string
        default: Automated Translation PR creation from actions
      LFS_USED:
        required: true
        type: boolean  
      APP_CODE_BRANCH:
        required: true
        type: string
      DEPLOYMENT_NAME:
        required: true
        type: string
      PARENT_DEPLOYMENT_NAME:
        type: string
        default: ""
      PARENT_DEPLOYMENT_REPO:
        type: string
        default: ""
      PARENT_DEPLOYMENT_BRANCH:
        type: string
        default: ""
      ENCRYPTED:
        required: true
        type: boolean  
    secrets:
      DEPLOYMENT_PRIVATE_KEY:
        required: false
      GDRIVE_CREDENTIALS:
        required: true
      GDRIVE_TOKEN:
        required: true
      PAT:
        required: true
    
jobs:
   build:
      runs-on: ubuntu-latest
      steps:

      - name: Check translation repo   #TODO this repo should be a variable
        uses: actions/checkout@v3
        with:
          repository: "IDEMSInternational/plh-digital-content.git"
          path: "plh-digital-content"
          ref: "main"

      - name: Check idems_translation
        uses: actions/checkout@v3
        with:
          repository: "IDEMSInternational/idems_translation.git"
          path: "idems_translation"
          ref: "master"

      - name: set up python enviroment
        uses: actions/setup-python@v5.0.0        
        with:
          python-version: '3.12'

      - name: Install dependencies using npm ci
        working-directory: idems_translation/common_tools
        run: npm ci

      - name: List contents of current directory
        run: ls -l
  
      - name: Check out app code
        uses: actions/checkout@v4
        with:
          repository: "IDEMSInternational/open-app-builder.git"
          ref: ${{inputs.APP_CODE_BRANCH}}

      - name: Remove .git from the repository in order to nest
        run: |
          rm -rf .git
      
      - name: List contents of current directory
        run: ls -l
        
      - name: Checkout parent repo if needed
        if: inputs.PARENT_DEPLOYMENT_REPO != ''
        uses: actions/checkout@v4
        with:
          path: ".idems_app/deployments/${{inputs.PARENT_DEPLOYMENT_NAME}}"
          repository: ${{inputs.PARENT_DEPLOYMENT_REPO}}
          ref: ${{inputs.PARENT_DEPLOYMENT_BRANCH}}
          # main repo does not use lfs so explicitly omit
          lfs: false

      - name: Checkout deployment
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          path: ".idems_app/deployments/${{inputs.DEPLOYMENT_NAME}}"
          # content repo optionally includes lfs
          lfs: ${{inputs.LFS_USED}}

      - name: Populate Encryption key
        if: inputs.ENCRYPTED
        run: echo "${{secrets.DEPLOYMENT_PRIVATE_KEY}}" > ./.idems_app/deployments/${{inputs.DEPLOYMENT_NAME}}/encrypted/private.key

      - name: List contents of current directory
        run: ls -l


        
      - name: Run script to create translation files
        working-directory: idems_translation
        run: python app/scripts/merge_files_post_translation.py ../.idems_app/deployments/${{inputs.DEPLOYMENT_NAME}}/translator_settings.json

      
      - name: Move and rename translation file
        run: |
          LANGUAGES=$(cat parenting-app-ui/.idems_app/deployments/${{inputs.DEPLOYMENT_NAME}}/language_mappings.json)
          # Loop through languages and move files
          for lang in $(echo "${LANGUAGES}" | jq -r 'keys[]'); do
            destination=$(echo "${LANGUAGES}" | jq -r ".[\"$lang\"]")
            mv idems_translation/app/5_completed_dictionaries/${lang}_dictionary.json ../.idems_app/deployments/${{inputs.DEPLOYMENT_NAME}}/translations_source/translated_strings/translated.${destination}.json
          done
      


      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0

      #############################################################################
      #         Node Modules
      # Manually restore any previous cache to speed install
      # As immutable install will not change cache only save new cache if not hit
      # Uses fine-grained methods from https://github.com/actions/cache
      #############################################################################
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-yarn-v1-
      - name: Install node modules
        run: yarn install --immutable
      - uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('yarn.lock') }}
  
      - name: Set deployment
        run: yarn workflow deployment set ${{inputs.DEPLOYMENT_NAME}} --skip-refresh
          
      - name: Add google credentials
        run: |
          echo "${{secrets.GDRIVE_CREDENTIALS}}" > ./packages/scripts/config/credentials.json
    
      - name: Add google token
        run: echo "$GDRIVE_TOKEN" > ./packages/scripts/config/token.json
        env:
          GDRIVE_TOKEN: ${{ secrets.GDRIVE_TOKEN }}


      - name: Sync content
        run: yarn workflow sync

      - name: Increment version number
        run: yarn scripts version --content --auto-patch 
        
      - name: Commit changes
        working-directory: .idems_app/deployments/${{inputs.DEPLOYMENT_NAME}}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"        
          git add .  # This adds all changes to the staging area
          git diff --quiet && git diff --staged --quiet || git commit -m "Automated commit message" # Only commit if there are changes
        #  git checkout -b automated-changes

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          token: ${{ secrets.PAT }}
          # Relative path under $GITHUB_WORKSPACE to the repository. Defaults to $GITHUB_WORKSPACE.
          path: .idems_app/deployments/${{inputs.DEPLOYMENT_NAME}}             
          # The title of the pull request.
          title: ${{ inputs.pr-title }}
          # The body of the pull request.
          body: ${{ inputs.pr-body }}
          labels: test - preview
